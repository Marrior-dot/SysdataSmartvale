buildscript {
    repositories {
        mavenLocal()
        maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
        classpath "org.grails.plugins:hibernate5:${gormVersion-".RELEASE"}"
        classpath "com.bertramlabs.plugins:asset-pipeline-gradle:2.14.8"
    }
}

version "1.2.2"
group "fleet-app"

apply plugin:"eclipse"
apply plugin:"idea"
apply plugin:"war"
apply plugin:"org.grails.grails-web"
apply plugin:"asset-pipeline"
apply plugin:"org.grails.grails-gsp"



repositories {
    mavenLocal()
    maven { url "https://repo.grails.org/grails/core" }
/*
    maven {
        url "https://artifactory.acceptiondev.com.br/artifactory/plugins-release-local"
        credentials {
            username = "team_dev"
            password = "LjBMDteJTMfS9Lv7WeAC"
        }
    }
    maven {
        url "https://artifactory.acceptiondev.com.br/artifactory/libs-release-local"
        credentials {
            username = "team_dev"
            password = "LjBMDteJTMfS9Lv7WeAC"
        }
    }
*/
    maven { url "http://jrimum.org/maven/content/groups/public/"}
}

dependencies {
    compile project(':proc-control')

    compile "org.springframework.boot:spring-boot-starter-logging"
    compile "org.springframework.boot:spring-boot-autoconfigure"
    compile "org.grails:grails-core"
    compile "org.springframework.boot:spring-boot-starter-actuator"
    compile "org.springframework.boot:spring-boot-starter-tomcat"
    compile "org.grails:grails-web-boot"
    compile "org.grails:grails-logging"
    compile "org.grails:grails-plugin-rest"
    compile "org.grails:grails-plugin-databinding"
    compile "org.grails:grails-plugin-i18n"
    compile "org.grails:grails-plugin-services"
    compile "org.grails:grails-plugin-url-mappings"
    compile "org.grails:grails-plugin-interceptors"
    compile "org.grails.plugins:cache"
    compile "org.grails.plugins:async"
    compile "org.grails.plugins:scaffolding"
    compile "org.grails.plugins:events"
    compile "org.grails.plugins:hibernate5"
    compile "org.hibernate:hibernate-core:5.1.5.Final"
    compile "org.grails.plugins:gsp"
    console "org.grails:grails-console"
    profile "org.grails.profiles:web"
    runtime "org.glassfish.web:el-impl:2.1.2-b03"
    runtime "com.h2database:h2"
    runtime "org.apache.tomcat:tomcat-jdbc"
    runtime "com.bertramlabs.plugins:asset-pipeline-grails:2.14.8"
    testCompile "org.grails:grails-gorm-testing-support"
    testCompile "org.grails:grails-web-testing-support"
    testCompile "org.grails.plugins:geb:1.1.2"
    testRuntime "org.seleniumhq.selenium:selenium-chrome-driver:2.47.1"
    testRuntime "org.seleniumhq.selenium:selenium-htmlunit-driver:2.47.1"
    testRuntime "net.sourceforge.htmlunit:htmlunit:2.18"

    //
    runtime "org.postgresql:postgresql:9.4.1211.jre7"

    //compile "org.jrimum:jrimum-bopepo:0.2.3-SNAPSHOT"

    //compile "org.grails.plugins:hibernate-filter-plugin:0.5.5"
    compile 'org.grails.plugins:quartz:2.0.13'
    //compile 'org.grails.plugins:audit-logging:3.0.5'
    compile 'org.grails.plugins:spring-security-core:3.2.1'

    compile 'org.grails.plugins:grails-console:2.1.1'

    compile 'org.apache.poi:poi:3.7'
    compile 'org.apache.poi:poi-ooxml:3.7'
    compile 'org.apache.poi:poi-ooxml-schemas:3.7'

    compile ("org.grails.plugins:export:2.0.0") {
        exclude group: 'com.sun.jdmk', module:'jmxtools'
        exclude group: 'com.sun.jmx', module:'jmxri'
    }

// JAX-B dependencies for JDK 9+
    runtime "javax.xml.bind:jaxb-api:2.2.11"
    runtime "com.sun.xml.bind:jaxb-core:2.2.11"
    runtime "com.sun.xml.bind:jaxb-impl:2.2.11"
    runtime "javax.activation:activation:1.1.1"

    compile "org.grails.plugins:hibernate-filter-plugin:0.5.5"

    compile group: "org.apache.camel", name: "camel-spring-boot", version: "2.15.5"
    runtime group: "org.apache.camel", name: "camel-ftp", version: "2.15.5"

    compile 'org.codehaus.groovy.modules.http-builder:http-builder:0.7'


    // Caelum Stella Boleto
    compile "br.com.caelum.stella:caelum-stella-boleto:2.1.2"


}

bootRun {
    jvmArgs = ["-Dspring.output.ansi.enabled=always", "-Xms512m", "-Xmx2048m"]
    addResources = true
    String springProfilesActive = 'spring.profiles.active'
    systemProperty springProfilesActive, System.getProperty(springProfilesActive)
    systemProperties = System.properties
}

tasks.withType(Test) {
    systemProperty "geb.env", System.getProperty('geb.env')
    systemProperty "geb.build.reportsDir", reporting.file("geb/integrationTest")
    systemProperty "webdriver.chrome.driver", System.getProperty('webdriver.chrome.driver')
    systemProperty "webdriver.gecko.driver", System.getProperty('webdriver.gecko.driver')
}

assets {
    minifyJs = true
    minifyCss = true
}
